简单工厂、工厂方法、抽象工厂区别参考：
http://www.cnblogs.com/zhangchenliang/p/3700820.html
======================
简单工厂：就是 一个能够创建对象的工厂。至于创建什么类型的对象，由Client传递的参数来判断。
主要就是通过switch-case。

简单工厂缺点：如果想要添加新品种对象，不仅仅要创建 新的接口和实现类。而且还需要在工厂中创建实例时，添加case判断。
这就造成了几个个问题：
（1）switch-case过长。
（2）违背了开放封闭原则。即对扩展开放，对修改封闭。

==============================
工厂方法模式：
首先，不需要switch-case，而是客户端明确指定需要创建什么类型的对象。
其次，创建新的接口和实现类即可。无需修改工厂。
具体实现：
将工厂设定成abstract的。里面还提供一个abstract的方法，这个方法来创建一个对象。
但是真正创建对象的却是 这个工厂的实现类。
Client明确指定要创建哪个实现类即可。
=================================
工厂方法模式优化部分：
（1）即对于产品树上类似的种类（一般是树的叶子中互为兄弟的）使用简单工厂模式来实现。---操作？
（2）略
==============================
什么时候用简单工厂呢？
需求很简单，后期扩展的可能性很小时，可以考虑使用简单工厂模式。